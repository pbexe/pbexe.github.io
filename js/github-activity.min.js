function millisecondsToStr(e){"use strict";function t(e){return e>1?"s ago":" ago"}var i=Math.floor(e/1e3),n=Math.floor(i/31536e3);if(n)return n+" year"+t(n);var a=Math.floor((i%=31536e3)/2592e3);if(a)return a+" month"+t(a);var r=Math.floor((i%=2592e3)/86400);if(r)return r+" day"+t(r);var o=Math.floor((i%=86400)/3600);if(o)return"about "+o+" hour"+t(o);var s=Math.floor((i%=3600)/60);if(s)return s+" minute"+t(s);var l=i%60;return l?l+" second"+t(l):"just now"}function pluralize(e,t){return 1!==t?e+"s":e}function md5cycle(e,t){var i=e[0],n=e[1],a=e[2],r=e[3];i=ff(i,n,a,r,t[0],7,-680876936),r=ff(r,i,n,a,t[1],12,-389564586),a=ff(a,r,i,n,t[2],17,606105819),n=ff(n,a,r,i,t[3],22,-1044525330),i=ff(i,n,a,r,t[4],7,-176418897),r=ff(r,i,n,a,t[5],12,1200080426),a=ff(a,r,i,n,t[6],17,-1473231341),n=ff(n,a,r,i,t[7],22,-45705983),i=ff(i,n,a,r,t[8],7,1770035416),r=ff(r,i,n,a,t[9],12,-1958414417),a=ff(a,r,i,n,t[10],17,-42063),n=ff(n,a,r,i,t[11],22,-1990404162),i=ff(i,n,a,r,t[12],7,1804603682),r=ff(r,i,n,a,t[13],12,-40341101),a=ff(a,r,i,n,t[14],17,-1502002290),n=ff(n,a,r,i,t[15],22,1236535329),i=gg(i,n,a,r,t[1],5,-165796510),r=gg(r,i,n,a,t[6],9,-1069501632),a=gg(a,r,i,n,t[11],14,643717713),n=gg(n,a,r,i,t[0],20,-373897302),i=gg(i,n,a,r,t[5],5,-701558691),r=gg(r,i,n,a,t[10],9,38016083),a=gg(a,r,i,n,t[15],14,-660478335),n=gg(n,a,r,i,t[4],20,-405537848),i=gg(i,n,a,r,t[9],5,568446438),r=gg(r,i,n,a,t[14],9,-1019803690),a=gg(a,r,i,n,t[3],14,-187363961),n=gg(n,a,r,i,t[8],20,1163531501),i=gg(i,n,a,r,t[13],5,-1444681467),r=gg(r,i,n,a,t[2],9,-51403784),a=gg(a,r,i,n,t[7],14,1735328473),n=gg(n,a,r,i,t[12],20,-1926607734),i=hh(i,n,a,r,t[5],4,-378558),r=hh(r,i,n,a,t[8],11,-2022574463),a=hh(a,r,i,n,t[11],16,1839030562),n=hh(n,a,r,i,t[14],23,-35309556),i=hh(i,n,a,r,t[1],4,-1530992060),r=hh(r,i,n,a,t[4],11,1272893353),a=hh(a,r,i,n,t[7],16,-155497632),n=hh(n,a,r,i,t[10],23,-1094730640),i=hh(i,n,a,r,t[13],4,681279174),r=hh(r,i,n,a,t[0],11,-358537222),a=hh(a,r,i,n,t[3],16,-722521979),n=hh(n,a,r,i,t[6],23,76029189),i=hh(i,n,a,r,t[9],4,-640364487),r=hh(r,i,n,a,t[12],11,-421815835),a=hh(a,r,i,n,t[15],16,530742520),n=hh(n,a,r,i,t[2],23,-995338651),i=ii(i,n,a,r,t[0],6,-198630844),r=ii(r,i,n,a,t[7],10,1126891415),a=ii(a,r,i,n,t[14],15,-1416354905),n=ii(n,a,r,i,t[5],21,-57434055),i=ii(i,n,a,r,t[12],6,1700485571),r=ii(r,i,n,a,t[3],10,-1894986606),a=ii(a,r,i,n,t[10],15,-1051523),n=ii(n,a,r,i,t[1],21,-2054922799),i=ii(i,n,a,r,t[8],6,1873313359),r=ii(r,i,n,a,t[15],10,-30611744),a=ii(a,r,i,n,t[6],15,-1560198380),n=ii(n,a,r,i,t[13],21,1309151649),i=ii(i,n,a,r,t[4],6,-145523070),r=ii(r,i,n,a,t[11],10,-1120210379),a=ii(a,r,i,n,t[2],15,718787259),n=ii(n,a,r,i,t[9],21,-343485551),e[0]=add32(i,e[0]),e[1]=add32(n,e[1]),e[2]=add32(a,e[2]),e[3]=add32(r,e[3])}function cmn(e,t,i,n,a,r){return t=add32(add32(t,e),add32(n,r)),add32(t<<a|t>>>32-a,i)}function ff(e,t,i,n,a,r,o){return cmn(t&i|~t&n,e,t,a,r,o)}function gg(e,t,i,n,a,r,o){return cmn(t&n|i&~n,e,t,a,r,o)}function hh(e,t,i,n,a,r,o){return cmn(t^i^n,e,t,a,r,o)}function ii(e,t,i,n,a,r,o){return cmn(i^(t|~n),e,t,a,r,o)}function md51(e){txt="";var n,t=e.length,i=[1732584193,-271733879,-1732584194,271733878];for(n=64;n<=e.length;n+=64)md5cycle(i,md5blk(e.substring(n-64,n)));e=e.substring(n-64);var a=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];for(n=0;n<e.length;n++)a[n>>2]|=e.charCodeAt(n)<<(n%4<<3);if(a[n>>2]|=128<<(n%4<<3),n>55)for(md5cycle(i,a),n=0;16>n;n++)a[n]=0;return a[14]=8*t,md5cycle(i,a),i}function md5blk(e){var i,t=[];for(i=0;64>i;i+=4)t[i>>2]=e.charCodeAt(i)+(e.charCodeAt(i+1)<<8)+(e.charCodeAt(i+2)<<16)+(e.charCodeAt(i+3)<<24);return t}function rhex(e){for(var t="",i=0;4>i;i++)t+=hex_chr[e>>8*i+4&15]+hex_chr[e>>8*i&15];return t}function hex(e){for(var t=0;t<e.length;t++)e[t]=rhex(e[t]);return e.join("")}function md5(e){return hex(md51(e))}function add32(e,t){return e+t&4294967295}function add32(e,t){var i=(65535&e)+(65535&t),n=(e>>16)+(t>>16)+(i>>16);return n<<16|65535&i}var GitHubActivity=function(){"use strict";var e={},t={renderLink:function(e,t,i){return t||(t=e),"undefined"==typeof i&&(i=""),Mustache.render('<a class="'+i+'" href="{{url}}" target="_blank">{{{title}}}</a>',{url:e,title:t})},renderGitHubLink:function(e,i,n){return i||(i=e),"undefined"==typeof n&&(n=""),t.renderLink("https://github.com/"+e,i,n)},getMessageFor:function(e){var i=e.payload;if(e.repoLink=t.renderGitHubLink(e.repo.name),e.userGravatar=Mustache.render('<div class="gha-gravatar-user"><img src="{{url}}" class="gha-gravatar-small"></div>',{url:e.actor.avatar_url}),i.ref&&("refs/heads/"===i.ref.substring(0,11)?e.branch=i.ref.substring(11):e.branch=i.ref,e.branchLink=t.renderGitHubLink(e.repo.name+"/tree/"+e.branch,e.branch)+" at "),i.commits){var n=i.before+"..."+i.head,a=i.commits.length;2===a?e.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">View comparison for these 2 commits &raquo;</a>',{repo:e.repo.name,shaDiff:n}):a>2&&(e.commitsMessage=Mustache.render('<a href="https://github.com/{{repo}}/compare/{{shaDiff}}">{{length}} more '+pluralize("commit",a-2)+" &raquo;</a>",{repo:e.repo.name,shaDiff:n,length:i.size-2})),i.commits.forEach(function(n,a){return n.message.length>66&&(n.message=n.message.substring(0,66)+"..."),2>a?(n.shaLink=t.renderGitHubLink(e.repo.name+"/commit/"+n.sha,n.sha.substring(0,6),"gha-sha"),void(n.committerGravatar=Mustache.render('<img class="gha-gravatar-commit" src="https://gravatar.com/avatar/{{hash}}?s=30&d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="16" />',{hash:md5(n.author.email)}))):(i.commits.splice(2,i.size),!1)})}if(i.issue){var r=e.repo.name+"#"+i.issue.number;e.issueLink=t.renderLink(i.issue.html_url,r),e.issueType="issue",i.issue.pull_request&&(e.issueType="pull request")}if(i.pull_request){var o=i.pull_request;if(e.pullRequestLink=t.renderLink(o.html_url,e.repo.name+"#"+o.number),e.mergeMessage="",i.pull_request.merged){i.action="merged";var s="{{c}} "+pluralize("commit",o.commits)+" with {{a}} "+pluralize("addition",o.additions)+" and {{d}} "+pluralize("deletion",o.deletions);e.mergeMessage=Mustache.render('<br><small class="gha-message-merge">'+s+"</small>",{c:o.commits,a:o.additions,d:o.deletions})}}if(i.comment&&i.comment.pull_request_url){var r=e.repo.name+"#"+i.comment.pull_request_url.split("/").pop();e.pullRequestLink=t.renderGitHubLink(i.comment.pull_request_url,r)}if(i.comment&&i.comment.body&&(e.comment=i.comment.body,e.comment.length>150&&(e.comment=e.comment.substring(0,150)+"..."),i.comment.html_url&&i.comment.commit_id)){var r=e.repo.name+"@"+i.comment.commit_id.substring(0,10);e.commentLink=t.renderLink(i.comment.html_url,r)}if("ReleaseEvent"===e.type&&(e.tagLink=t.renderLink(i.release.html_url,i.release.tag_name),e.zipLink=t.renderLink(i.release.zipball_url,"Download Source Code (zip)")),"GollumEvent"===e.type){var l=i.pages[0];e.actionType=l.action,e.message=e.actionType.charAt(0).toUpperCase()+e.actionType.slice(1)+" ",e.message+=t.renderGitHubLink(l.html_url,l.title)}"FollowEvent"===e.type&&(e.targetLink=t.renderGitHubLink(i.target.login)),"ForkEvent"===e.type&&(e.forkLink=t.renderGitHubLink(i.forkee.full_name)),"MemberEvent"===e.type&&(e.memberLink=t.renderGitHubLink(i.member.login)),i.gist&&(e.actionType="fork"===i.action?i.action+"ed":i.action+"d",e.gistLink=t.renderLink(i.gist.html_url,"gist: "+i.gist.id));var c,s=Mustache.render(templates[e.type],e),u=millisecondsToStr(new Date-new Date(e.created_at));c="CreateEvent"==e.type&&["repository","branch","tag"].indexOf(i.ref_type)>=0?icons[e.type+"_"+i.ref_type]:icons[e.type];var d={message:s,icon:c,timeString:u,userLink:t.renderGitHubLink(e.actor.login)};return singleLineActivities.indexOf(e.type)>-1?Mustache.render(templates.SingleLineActivity,d):Mustache.render(templates.Activity,d)},getHeaderHTML:function(e){return e.name?e.userNameLink=t.renderLink(e.html_url,e.name):e.withoutName=" without-name",e.userLink=t.renderLink(e.html_url,e.login),e.gravatarLink=t.renderLink(e.html_url,'<img src="'+e.avatar_url+'">'),Mustache.render(templates.UserHeader,e)},getActivityHTML:function(e,i){var n="",a=e.length;if(i&&i>a&&(i=a),i=i?i:a,0===i)return Mustache.render(templates.NoActivity,{});for(var r=0;i>r;r++)n+=t.getMessageFor(e[r]);return n},getOutputFromRequest:function(e,t){var i=new XMLHttpRequest;i.open("GET",e),i.setRequestHeader("Accept","application/vnd.github.v3+json"),i.onreadystatechange=function(){if(4===i.readyState)if(i.status>=200&&i.status<300){var n=JSON.parse(i.responseText);t(void 0,n)}else t("request for "+e+" yielded status "+i.status)},i.onerror=function(){t("An error occurred connecting to "+e)},i.send()},renderStream:function(e,t){t.innerHTML=Mustache.render(templates.Stream,{text:e,footer:templates.Footer}),t.style.position="relative"},writeOutput:function(e,i){var n="#"===e.charAt(0)?document.getElementById(e.substring(1)):document.getElementsByClassName(e.substring(1));if(n instanceof HTMLCollection)for(var a=0;a<n.length;a++)t.renderStream(i,n[a]);else t.renderStream(i,n)},renderIfReady:function(e,i,n){i&&n&&t.writeOutput(e,i+n)}};return e.feed=function(e){if(!e.username||!e.selector)throw"You must specify the username and selector options for the activity stream.";var r,o,i=e.selector,n="https://api.github.com/users/"+e.username,a=n+"/events";if(e.repository&&(a="https://api.github.com/repos/"+e.username+"/"+e.repository+"/events"),e.clientId&&e.clientSecret){var s="?client_id="+e.clientId+"&client_secret="+e.clientSecret;n+=s,a+=s}if(e.eventsUrl&&(a=e.eventsUrl),"object"==typeof e.templates)for(var l in templates)"string"==typeof e.templates[l]&&(templates[l]=e.templates[l]);t.getOutputFromRequest(n,function(n,a){r=n?Mustache.render(templates.UserNotFound,{username:e.username}):t.getHeaderHTML(a),t.renderIfReady(i,r,o)}),t.getOutputFromRequest(a,function(n,a){if(n)o=Mustache.render(templates.EventsNotFound,{username:e.username});else{var s="undefined"!=e.limit?parseInt(e.limit,10):null;o=t.getActivityHTML(a,s)}t.renderIfReady(i,r,o)})},e}(),hex_chr="0123456789abcdef".split("");"5d41402abc4b2a76b9719d911017c592"!=md5("hello");var templates={Stream:'<div class="gha-feed">{{{text}}}<div class="gha-stop"></div>{{{footer}}}</div>',Activity:'<div id="{{id}}" class="gha-activity">               <div class="gha-activity-icon"><span class="octicon octicon-{{icon}}"></span></div>               <div class="gha-message"><div class="gha-time">{{{timeString}}}</div>{{{userLink}}} {{{message}}}</div>               <div class="gha-clear"></div>             </div>',SingleLineActivity:'<div class="gha-activity gha-small">                         <div class="gha-activity-icon"><span class="octicon octicon-{{icon}}"></span></div>                         <div class="gha-message">{{{userLink}}} {{{message}}}</div><div class="gha-time">{{{timeString}}}</div>                         <div class="gha-clear"></div>                       </div>',UserHeader:'<div class="gha-header">                 <div class="gha-github-icon"><span class="octicon octicon-mark-github"></span></div>                 <div class="gha-user-info{{withoutName}}">{{{userNameLink}}}<p>{{{userLink}}}</p></div>                 <div class="gha-gravatar">{{{gravatarLink}}}</div>               </div><div class="gha-push"></div>',Footer:"",NoActivity:'<div class="gha-info">This user does not have any public activity yet.</div>',UserNotFound:'<div class="gha-info">User {{username}} wasn\'t found.</div>',EventsNotFound:'<div class="gha-info">Events for user {{username}} not found.</div>',CommitCommentEvent:"commented on commit {{{commentLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",CreateEvent:"created {{payload.ref_type}} {{{branchLink}}}{{{repoLink}}}",DeleteEvent:"deleted {{payload.ref_type}} {{payload.ref}} at {{{repoLink}}}",FollowEvent:"started following {{{targetLink}}}",ForkEvent:"forked {{{repoLink}}} to {{{forkLink}}}",GistEvent:"{{actionType}} {{{gistLink}}}",GollumEvent:"{{actionType}} the {{{repoLink}}} wiki<br>{{{userGravatar}}}<small>{{{message}}}</small>",IssueCommentEvent:"commented on {{issueType}} {{{issueLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",IssuesEvent:"{{payload.action}} issue {{{issueLink}}}<br>{{{userGravatar}}}<small>{{payload.issue.title}}</small>",MemberEvent:"added {{{memberLink}}} to {{{repoLink}}}",PublicEvent:"open sourced {{{repoLink}}}",PullRequestEvent:"{{payload.action}} pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{payload.pull_request.title}}</small>{{{mergeMessage}}}",PullRequestReviewCommentEvent:"commented on pull request {{{pullRequestLink}}}<br>{{{userGravatar}}}<small>{{comment}}</small>",PushEvent:'pushed to {{{branchLink}}}{{{repoLink}}}<br>                <ul class="gha-commits">{{#payload.commits}}<li><small>{{{committerGravatar}}} {{{shaLink}}} {{message}}</small></li>{{/payload.commits}}</ul>                <small class="gha-message-commits">{{{commitsMessage}}}</small>',ReleaseEvent:'released {{{tagLink}}} at {{{repoLink}}}<br>{{{userGravatar}}}<small><span class="octicon octicon-cloud-download"></span>  {{{zipLink}}}</small>',WatchEvent:"starred {{{repoLink}}}"},icons={CommitCommentEvent:"comment-discussion",CreateEvent_repository:"repo-create",CreateEvent_tag:"tag-add",CreateEvent_branch:"git-branch-create",DeleteEvent:"repo-delete",FollowEvent:"person-follow",ForkEvent:"repo-forked",GistEvent:"gist",GollumEvent:"repo",IssuesEvent:"issue-opened",IssueCommentEvent:"comment-discussion",MemberEvent:"person",PublicEvent:"globe",PullRequestEvent:"git-pull-request",PullRequestReviewCommentEvent:"comment-discussion",PushEvent:"git-commit",ReleaseEvent:"tag-add",WatchEvent:"star"},singleLineActivities=["CreateEvent","DeleteEvent","FollowEvent","ForkEvent","GistEvent","MemberEvent","WatchEvent"];